test:
mov [001|h], 50
push 25
pop [010|h]
dec [10]
add [10], edx
mul [100|b], 0x20
ret

start:
mov [100|b], 50
mov eax, [100|b]
mov edx, 0x100
push eax
push edx
pop [010|h]
pushf
push 42
call test
popf edx
call divide
call modulo
rem ecx

divide:
div edx, 3
ret

modulo:
mod edx, 10
ret

